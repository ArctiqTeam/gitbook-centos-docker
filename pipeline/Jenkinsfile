
node {
    try {
        notifyBuild('STARTED')
        stage 'build'
            sh '''
            oc start-built gitbook-centos-docker'
            '''
        stage 'scan image'
           // withCredentials([usernamePassword(credentialsId: '4adb7468-19de-48b2-ba8a-9b177ae6d8e9', passwordVariable: 'password', usernameVariable: 'username')]) {
           //     sh '''
           //     docker login -e=shea.stewart@arctiq.ca -u=$username -p=$password
           //     '''
           // }
            aqua hideBase: false, hostedImage: 'cicd/gitbook-centos-docker:latest', localImage: '', locationType: 'hosted', notCompliesCmd: '', onDisallowed: 'fail', registry: 'ocp', showNegligible: false


        stage 'ask for deployment'
            input id: 'Approve01', message: 'Looks Good! Wanna deploy?????', ok: 'HANG TIGHT!'

        stage 'deploy'
            sh '''
            oc rollout  latest dc/gitbook-centos-docker
            '''

        stage 'verify'
            sh '''
            echo "running verifications"
            '''


  } catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
